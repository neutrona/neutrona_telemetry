input {
  rabbitmq {
    host => "telemetry.neutrona.com"
    port => 5671
    user => "neutrona_subscriber"
    password => "~LGTdMWLWz~7G8!QFE"
    exchange => "neutrona_customers_telemetry"
    queue => "test-rod"
    durable => true
    arguments => {"x-message-ttl" => 300000}
    ssl => true
  }
}

filter {
  if [Data type] == "Performance" {
    date {
      match => [ "Date","yyyy-MM-dd HH:mm:ssZZ" ]
      target => "@timestamp"
    }
  }
  if [Data type] == "Dying Gasp" {
    date {
      match => [ "Date","ISO8601" ]
      target => "@timestamp"
    }
    mutate {
      add_field => {
        "CustomerMeasurement" => "%{Service ID}.LLP"
      }
    }
  }
  if [Data type] == "Client Port Status" {
    date {
      match => [ "Date","ISO8601" ]
      target => "@timestamp"
    }
    mutate {
      add_field => {
        "CustomerMeasurement" => "%{Service ID}.LLP"
      }
    }
  }
}

output {
  if [Data type] == "Performance" {
    influxdb {
      data_points => {
        "Packet Loss NE valid" => "%{[Packet loss NE valid]}"
        "Packet Loss Ratio NE" => "%{[Packet loss ratio NE]}"
        "Two Way Delay valid" => "%{[Two Way Delay valid]}"
        "Two Way Delay average" => "%{[Two Way Delay average]}"
        "Two Way DV valid" => "%{[Two Way DV valid]}"
        "Two Way DV average" => "%{[Two Way DV average]}"
        "Source MAC Address" => "%{[Source MAC Address]}"
        "Destination MAC Address" => "%{[Destination MAC Address]}"
        "Peer Address" => "%{[Peer Address]}"
        "Destination IP Address" => "%{[Destination IP Address]}"
      }
      coerce_values => {
        "Packet Loss Ratio NE" => "float"
        "Two Way Delay average" => "integer"
        "Two Way DV average" => "integer"
      }
      measurement => "%{[Name]}"
      send_as_tags => ["Packet Loss NE valid", "Two Way Delay valid", "Two Way DV valid", "Source MAC Address", "Destination MAC Address", "Peer Address", "Destination IP Address"]
      db => "neutrona_telemetry"
      host => "influxdb"
    }
  }
  if [Data type] == "Dying Gasp" {
    influxdb {
      data_points => {
        "System Uptime" => "%{[System Uptime]}"
        "System MAC Address" => "%{[System MAC Address]}"
        "Message" => "%{[Message]}"
      }
      measurement => "%{[CustomerMeasurement]}"
      send_as_tags => ["System MAC Address"]
      db => "neutrona_telemetry"
      host => "influxdb"
    }
  }
  if [Data type] == "Client Port Status" {
    stdout {
      codec => "rubydebug"
    } 
    influxdb {
      data_points => {
        "ClientPortStatus" => "%{[ClientPortStatus]}"
      }
      measurement => "%{[CustomerMeasurement]}"
      db => "neutrona_telemetry"
      host => "influxdb"
    }
  }
}
